[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "ragaai_catalyst"
description = "RAGA AI CATALYST"
readme = "README.md"
requires-python = ">=3.10,<=3.13.2"
# license = {file = "LICENSE"}
version = "2.1.6.4"
authors = [
    {name = "Kiran Scaria", email = "kiran.scaria@raga.ai"},
    {name = "Kedar Gaikwad", email = "kedar.gaikwad@raga.ai"},
    {name = "Dushyant Mahajan", email = "dushyant.mahajan@raga.ai"},
    {name = "Siddhartha Kosti", email = "siddhartha.kosti@raga.ai"},
    {name = "Ritika Goel", email = "ritika.goel@raga.ai"},
    {name = "Vijay Chaurasia", email="vijay.chaurasia@raga.ai"},
    {name = "Tushar Kumar", email="tushar.kumar@raga.ai"}
]

dependencies = [
    "aiohttp>=3.10.2", # Ref: https://github.com/raga-ai-hub/ragaai-catalyst/security/dependabot/1
    "langchain-core>=0.2.11",
    "langchain>=0.2.11",
    "openai>=1.57.0",
    "pandas",
    "groq>=0.11.0",
    "pypdf>=5.3.1",
    "google-genai>=1.3.0",
    "Markdown>=3.7",
    "litellm>=1.51.1",
    "tenacity==8.3.0",
    "tqdm>=4.66.5",
    "llama-index>=0.10.0",
    "pyopenssl>=24.2.1",
    "psutil~=6.0.0",
    "py-cpuinfo~=9.0.0",
    "requests~=2.32.3",
    "GPUtil~=1.4.0",
    "ipynbname",
    "tiktoken>=0.7.0",
    "tomli>=2.0.0",
    "rich>=13.9.4",
    "openinference-instrumentation-llama-index",
    "openinference-instrumentation-langchain",
    "openinference-instrumentation-vertexai",
    "openinference-instrumentation-anthropic",
    "openinference-instrumentation-groq",
    "openinference-instrumentation-litellm",
    "openinference-instrumentation-mistralai",
    "openinference-instrumentation-openai",
    "openinference-instrumentation-bedrock",
    "openinference-instrumentation-crewai",
    "openinference-instrumentation-haystack",
    "openinference-instrumentation-openai-agents",
    "openinference-instrumentation-smolagents",
    "opentelemetry-sdk",
    "opentelemetry-exporter-otlp",
    "opentelemetry-proto>=1.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-cov", 
    "black", 
    "isort", 
    "mypy", 
    "flake8"
]

[tool.setuptools]
packages = ["ragaai_catalyst"]

# [tool.setuptools_scm]
# write_to = "ragaai_catalyst/_version.py"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
ignore_missing_imports = true
strict = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage.run]
source = ["ragaai_catalyst"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
